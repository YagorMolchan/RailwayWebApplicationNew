// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RailwayNew1.Data;

namespace RailwayNew1.Migrations
{
    [DbContext(typeof(RailwayContext))]
    partial class RailwayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Duration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Durations");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("NumberOfDocument");

                    b.Property<string>("Patronymic");

                    b.Property<string>("Surename");

                    b.Property<string>("TypeOfDocument");

                    b.HasKey("Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Country");

                    b.Property<string>("Finish");

                    b.Property<string>("Start");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<int?>("DurationId");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("DurationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId");

                    b.Property<int>("PassengerId");

                    b.Property<int>("SeatNumber");

                    b.Property<int?>("TripId");

                    b.Property<string>("TypeOfTicket");

                    b.Property<int>("WagonNumber");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PassengerId")
                        .IsUnique();

                    b.HasIndex("TripId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompartmentCount");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EconomClassCount");

                    //b.Property<int?>("GeneralCount");

                    b.Property<int?>("LuxuryCount");

                    b.Property<int>("RouteId");

                    b.Property<int?>("SeatCount");

                    b.Property<int?>("SleepingCount");

                    b.HasKey("Id");

                    b.HasIndex("RouteId")
                        .IsUnique();

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Surename");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Wagon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SeatCount");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Wagons");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.ManyToMany.RouteStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan?>("Arrival");

                    b.Property<TimeSpan?>("Departure");

                    b.Property<float?>("Distance");

                    b.Property<TimeSpan?>("ParkingTime");

                    b.Property<int?>("RouteId");

                    b.Property<int?>("StationId");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("StationId");

                    b.ToTable("RouteStation");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.ManyToMany.WagonRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RouteId");

                    b.Property<int?>("WagonId");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("WagonId");

                    b.ToTable("WagonRoute");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Order", b =>
                {
                    b.HasOne("RailwayNew1.Models.Domain.Entity.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Station", b =>
                {
                    b.HasOne("RailwayNew1.Models.Domain.Entity.Duration", "Duration")
                        .WithMany("Stations")
                        .HasForeignKey("DurationId");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Ticket", b =>
                {
                    b.HasOne("RailwayNew1.Models.Domain.Entity.Order", "Order")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderId");

                    b.HasOne("RailwayNew1.Models.Domain.Entity.Passenger", "Passenger")
                        .WithOne("Ticket")
                        .HasForeignKey("RailwayNew1.Models.Domain.Entity.Ticket", "PassengerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RailwayNew1.Models.Domain.Entity.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.Entity.Trip", b =>
                {
                    b.HasOne("RailwayNew1.Models.Domain.Entity.Route", "Route")
                        .WithOne("Trip")
                        .HasForeignKey("RailwayNew1.Models.Domain.Entity.Trip", "RouteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.ManyToMany.RouteStation", b =>
                {
                    b.HasOne("RailwayNew1.Models.Domain.Entity.Route", "Route")
                        .WithMany("RouteStations")
                        .HasForeignKey("RouteId");

                    b.HasOne("RailwayNew1.Models.Domain.Entity.Station", "Station")
                        .WithMany("RouteStations")
                        .HasForeignKey("StationId");
                });

            modelBuilder.Entity("RailwayNew1.Models.Domain.ManyToMany.WagonRoute", b =>
                {
                    b.HasOne("RailwayNew1.Models.Domain.Entity.Route", "Route")
                        .WithMany("WagonRoutes")
                        .HasForeignKey("RouteId");

                    b.HasOne("RailwayNew1.Models.Domain.Entity.Wagon", "Wagon")
                        .WithMany("WagonTrains")
                        .HasForeignKey("WagonId");
                });
#pragma warning restore 612, 618
        }
    }
}
